<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- spring mvc 配置开始 -->

	<!-- 前端控制器 -->
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 默认是在WEB-INF/servlet-name（spring-mvc）+servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-mvc-kael.xml</param-value>
		</init-param>
		<!-- 表示启动容器时初始化该Servlet -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<!-- 表示哪些请求交给Spring Web MVC处理， “/” 是用来定义默认servlet映射的。也可以如“*.html”表示拦截所有以html为扩展名的请求。 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 上下文 -->
	<!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value> 
		classpath:spring-common-config.xml, classpath:spring-budget-config.xml </param-value> 
		</context-param> <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
		</listener> -->


	<!-- 编码设置开始 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 编码设置结束 -->
	
	<!-- 编码设置开始 -->
	<filter>
		<filter-name>cors</filter-name>
		<filter-class>com.hug.admin.filter.CrossOrignFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>cors</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ETag（实体标记）缓存机制开始 -->
	<filter>
		<filter-name>ETag</filter-name>
		<filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ETag</filter-name>
		<!-- 只过滤DispatcherServlet的请求 -->
		<servlet-name>spring-mvc</servlet-name>
	</filter-mapping>
	<!-- ETag（实体标记）缓存机制结束 -->

	<!-- restful风格的接口配置开始 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- restful风格的接口配置结束 -->

	<!-- spring配置结束 -->




	<!-- 激活Tomcat的defaultServlet来处理静态文件 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>
</web-app>