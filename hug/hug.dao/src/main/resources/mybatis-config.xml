<?xml version="1.0" encoding="UTF-8"?>  
    <!DOCTYPE configuration  
            PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
            "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 引用db.properties配置文件 -->
	<properties resource="db.properties" />

	<settings>
		<!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。默认值false -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 自动识别驼峰字段 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- SLF4J、LOG4J、LOG4J2、JDK_LOGGING、COMMONS_LOGGING、STDOUT_LOGGING、NO_LOGGING -->
		<setting name="logImpl" value="LOG4J" />

		<!-- 该配置影响的所有映射器中配置的缓存的全局开关。默认值true -->
		<setting name="cacheEnabled" value="true" />
		<!-- 是否允许单一语句返回多结果集（需要兼容驱动）。 默认值true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名。不同的驱动在这方面会有不同的表现， 具体可参考相关驱动文档或通过测试这两种不同的模式来观察所用驱动的结果。默认值true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许 JDBC 支持自动生成主键，需要驱动兼容。 如果设置为 true 则这个设置强制使用自动生成主键，尽管一些驱动不能兼容但仍可正常工作（比如 
			Derby）。 默认值false -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 
			FULL 会自动映射任意复杂的结果集（无论是否嵌套）。 -->
		<!-- 默认值PARTIAL -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 自动映射未知列行为 -->
		<!-- NONE: Do nothing -->
		<!--WARNING: Output warning log (The log level of'org.apache.ibatis.session.AutoMappingUnknownColumnBehavior'must 
			be set to WARN) -->
		<!-- FAILING: Fail mapping (Throw SqlSessionException) -->
		<setting name="autoMappingUnknownColumnBehavior" value="WARNING" />
		<!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 
			执行器将重用语句并执行批量更新。默认SIMPLE -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间，它决定驱动等待数据库响应的秒数。 -->
		<setting name="defaultStatementTimeout" value="25" />
		<!-- 默认最大取值数。 -->
		<setting name="defaultFetchSize" value="100" />
		<!-- 允许在嵌套语句中使用分页（RowBounds）默认值False -->
		<setting name="safeRowBoundsEnabled" value="false" />
		<!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 
			的类似映射。 默认false -->
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 
			默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 
			的不同调用将不会共享数据。 -->
		<setting name="localCacheScope" value="SESSION" />
		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 
			NULL、VARCHAR 或 OTHER。 -->
		<setting name="jdbcTypeForNull" value="OTHER" />
		<!-- 指定哪个对象的方法触发一次延迟加载。 -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>

	<!-- development : 开发模式 work : 工作模式 -->
	<!-- default 就是对应下面配置的Id, 这里的default配置的是keal -->
	<environments default="kael">
		<environment id="kael">
			<!-- 数据库事务方式 三种方式 -->
			<transactionManager type="JDBC">
				<property name="autoCommit" value="false" />
			</transactionManager>
			<!-- 配置数据库连接信息 -->
			<!-- UNOOLED 非连接池 UnpooledDataSource -->
			<!-- POOLED 非连接池 PooledDataSource -->
			<!-- JNDI -->
			<dataSource
				type="com.hug.dao.datasource.DruidDataSourceFactory">
				<!-- value属性值引用db.properties配置文件中配置的值 -->
				<property name="driverClassName" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${name}" />
				<property name="password" value="${password}" />

				<!-- 配置初始化大小、最小、最大 -->
				<property name="initialSize" value="1" />
				<property name="minIdle" value="1" />
				<property name="maxActive" value="20" />

				<!-- 配置获取连接等待超时的时间 -->
				<property name="maxWait" value="60000" />

				<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
				<property name="timeBetweenEvictionRunsMillis" value="60000" />

				<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
				<property name="minEvictableIdleTimeMillis" value="300000" />

				<property name="validationQuery" value="SELECT 'x'" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="false" />
				<property name="testOnReturn" value="false" />

				<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
				<property name="filters" value="stat" />
			</dataSource>
		</environment>
		<environment id="jugg">
			<transactionManager type="JDBC">
				<property name="autoCommit" value="false" />
			</transactionManager>
			<dataSource
				type="com.hug.dao.datasource.DruidDataSourceFactory">
				<property name="driverClassName" value="${driver}" />
				<property name="url" value="${jugg.url}" />
				<property name="username" value="${name}" />
				<property name="password" value="${password}" />
				<property name="initialSize" value="1" />
				<property name="minIdle" value="1" />
				<property name="maxActive" value="20" />
				<property name="maxWait" value="60000" />
				<property name="timeBetweenEvictionRunsMillis" value="60000" />
				<property name="minEvictableIdleTimeMillis" value="300000" />
				<property name="validationQuery" value="SELECT 'x'" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="false" />
				<property name="testOnReturn" value="false" />
				<property name="filters" value="stat" />
			</dataSource>
		</environment>
		<environment id="order.write">
			<transactionManager type="JDBC">
				<property name="autoCommit" value="false" />
			</transactionManager>
			<dataSource
				type="com.hug.dao.datasource.DruidDataSourceFactory">
				<property name="driverClassName" value="${driver}" />
				<property name="url" value="${order.write.url}" />
				<property name="username" value="${order.write.name}" />
				<property name="password" value="${order.write.password}" />
				<property name="initialSize" value="1" />
				<property name="minIdle" value="1" />
				<property name="maxActive" value="20" />
				<property name="maxWait" value="60000" />
				<property name="timeBetweenEvictionRunsMillis" value="60000" />
				<property name="minEvictableIdleTimeMillis" value="300000" />
				<property name="validationQuery" value="SELECT 'x'" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="false" />
				<property name="testOnReturn" value="false" />
				<property name="filters" value="stat" />
			</dataSource>
		</environment>
		<environment id="erp">
			<transactionManager type="JDBC">
				<property name="autoCommit" value="false" />
			</transactionManager>
			<dataSource
				type="com.hug.dao.datasource.DruidDataSourceFactory">
				<property name="driverClassName" value="${driver}" />
				<property name="url" value="${erp.url}" />
				<property name="username" value="${erp.name}" />
				<property name="password" value="${erp.password}" />
				<property name="initialSize" value="1" />
				<property name="minIdle" value="1" />
				<property name="maxActive" value="20" />
				<property name="maxWait" value="60000" />
				<property name="timeBetweenEvictionRunsMillis" value="60000" />
				<property name="minEvictableIdleTimeMillis" value="300000" />
				<property name="validationQuery" value="SELECT 'x'" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="false" />
				<property name="testOnReturn" value="false" />
				<property name="filters" value="stat" />
			</dataSource>
		</environment>
	</environments>

	<mappers>
		<mapper resource="mapper/study/UserMapper.xml" />
	</mappers>
</configuration>  